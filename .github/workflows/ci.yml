name: CI

on:
  push:
    branches: [ "main", "develop" ]
  pull_request:
    branches: [ "main", "develop" ]

permissions:
  contents: read
  id-token: write

env:
  JAVA_VERSION: '17'

jobs:
  build:
    name: Build
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Make mvnw executable
        run: chmod +x mvnw

      - uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: ${{ env.JAVA_VERSION }}
          cache: 'maven'

      - name: Build (Maven Wrapper)
        run: ./mvnw -B -DskipTests -f app/pom.xml package

  test:
    name: Test
    runs-on: ubuntu-latest
    needs: build
    steps:
      - uses: actions/checkout@v4

      - name: Make mvnw executable
        run: chmod +x mvnw

      - uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: ${{ env.JAVA_VERSION }}
          cache: 'maven'

      - name: Run tests
        run: ./mvnw -B -f app/pom.xml -Dspring.profiles.active=test test

      - name: Publica reports (siempre)
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: surefire-reports
          path: "app/**/target/surefire-reports/**"

  sonar:
    name: SonarQube
    runs-on: ubuntu-latest
    needs: test
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0  # Necesario para que SonarQube vea el historial

      - name: Make mvnw executable
        run: chmod +x mvnw

      - uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: ${{ env.JAVA_VERSION }}
          cache: 'maven'

      # Compila para generar app/target/classes
      - name: Build classes for Sonar
        run: ./mvnw -B -DskipTests -f app/pom.xml package

      # An√°lisis SonarCloud
      - name: SonarQube Scan (Maven)
        env:
          SONAR_HOST_URL: ${{ secrets.SONAR_HOST_URL }}
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        run: |
          ./mvnw -B -f app/pom.xml sonar:sonar \
            -Dsonar.host.url=${SONAR_HOST_URL} \
            -Dsonar.login=${SONAR_TOKEN} \
            -Dsonar.java.binaries=target/classes